name: Deploy main branch

on:
  push:
    branches:
      - main

jobs:
  terraform-validate:
    name: terraform-validate
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./ci
    steps:
    - name: 'Checkout'
      uses: actions/checkout@master
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        # terraform_version: 0.13.0
        tf_actions_working_dir: '.'
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Format
      id: fmt
      run: terraform fmt -check
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
  terraform-apply:
    name: terraform-apply
    runs-on: ubuntu-latest
    needs: [terraform-validate]
    defaults:
      run:
        shell: bash
        working-directory: ./ci
    steps:
    - name: 'Checkout'
      uses: actions/checkout@master
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        tf_actions_working_dir: '.'
        cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
    - name: Terraform Init
      id: init
      run: terraform init
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -input=false
      env:
        TF_VAR_GITHUB_SHA: ${{github.sha}}
      continue-on-error: true
    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: terraform apply -auto-approve -input=false
      env:
        TF_VAR_GITHUB_SHA: $  {{github.sha}}
